name: Build

on: [ push, pull_request ]

env:
  EM_VERSION: 3.1.44
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  build_macOS:
    strategy:
      matrix:
        version:
          - 11
          - latest
    runs-on: macOS-${{ matrix.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build examples
        working-directory: test
        run: make -f Makefile.osx all
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Examples-macOS-${{ matrix.version }}
          path: |
            test/test_oswrapper_image
            test/test_oswrapper_image_cpp
            test/test_oswrapper_audio
            test/test_oswrapper_audio_cpp
            test/test_oswrapper_audio_enc
            test/test_oswrapper_audio_enc_cpp
            test/test_oswrapper_audio_enc_mod
            test/test_oswrapper_audio_enc_mod_cpp
            test/test_oswrapper_audio_mac_encoder
            test/test_oswrapper_audio_mac_encoder_cpp
            test/demo_oswrapper_audio_mac
            test/demo_oswrapper_audio_mac_cpp
            test/demo_oswrapper_audio_miniaudio
            test/demo_oswrapper_audio_miniaudio_cpp
            test/demo_oswrapper_audio_sokol_audio
            test/demo_oswrapper_audio_sokol_audio_cpp
  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - amd64
          - amd64_x86
          - amd64_arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Build examples
        working-directory: test
        run: nmake -f Makefile.win32
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Examples-windows-${{ matrix.arch }}
          path: |
            test/test_oswrapper_image.exe
            test/test_oswrapper_image_cpp.exe
            test/test_oswrapper_image_no_crt.exe
            test/test_oswrapper_audio.exe
            test/test_oswrapper_audio_cpp.exe
            test/test_oswrapper_audio_no_crt.exe
            test/test_oswrapper_audio_enc.exe
            test/test_oswrapper_audio_enc_cpp.exe
            test/test_oswrapper_audio_enc_no_crt.exe
            test/test_oswrapper_audio_enc_mod.exe
            test/test_oswrapper_audio_enc_mod_cpp.exe
            test/test_oswrapper_audio_win_encoder.exe
            test/test_oswrapper_audio_win_encoder_cpp.exe
            test/test_oswrapper_audio_win_encoder_no_crt.exe
            test/demo_oswrapper_audio_miniaudio.exe
            test/demo_oswrapper_audio_miniaudio_cpp.exe
            test/demo_oswrapper_audio_sokol_audio.exe
            test/demo_oswrapper_audio_sokol_audio_no_crt.exe
            test/demo_oswrapper_audio_sokol_audio_cpp.exe
  build_emscripten:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup cache
        id: cache-system-libraries
        uses: actions/cache@v3
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}
      - name: Setup Emscripten SDK
        uses: mymindstorm/setup-emsdk@v12
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
      - name: Build examples
        working-directory: test
        run: make -f Makefile.em
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Examples-Emscripten
          path: |
            test/test_oswrapper_image.html
            test/test_oswrapper_image.js
            test/test_oswrapper_image.wasm
            test/test_oswrapper_image_cpp.html
            test/test_oswrapper_image_cpp.js
            test/test_oswrapper_image_cpp.wasm
